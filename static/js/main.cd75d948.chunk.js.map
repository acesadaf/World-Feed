{"version":3,"sources":["Tweets/TweetContext.js","components/Modal/LocationModal.js","GoogleMap/Location.js","GoogleMap/maps.js","Nav/NavBar.js","Tweets/TweetCard.js","Tweets/TweetList.js","App.js","serviceWorker.js","index.js","logo.svg","Images/cartoon-globe.png"],"names":["TweetContext","React","createContext","tweets","setTweets","LocModal","props","Modal","this","dark","aria-labelledby","centered","backdrop","dialogClassName","Header","closeButton","Title","id","Body","locName","Footer","Button","onClick","onHide","Component","mapStyles","position","width","height","CurrentLocation","initCenter","lat","lng","state","currentLocation","gotCurLoc","locModalShow","zoom","markers","prevProps","prevState","mp","document","getElementById","classList","remove","add","setState","loadMap","google","recenterMap","mev","stop","latLng","maps","LatLng","event","trigger","map","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","mapRef","refs","node","ReactDOM","findDOMNode","minZoom","maxZoom","center","mapConfig","Object","assign","styles","elementType","stylers","color","featureType","Map","context","addListener","console","log","localStorage","setItem","latlng","toString","replace","split","fetch","method","headers","body","JSON","stringify","type","then","response","ok","alert","json","data","setTimeout","reverseAddress","placeMarkerAndPanTo","Geocoder","geocode","location","results","status","place","length","address_components","long_name","err","err2","places","PlacesService","i","setMap","marker","Marker","push","panTo","children","Children","c","cloneElement","mapCenter","current","style","ref","renderChildren","show","contextType","defaultProps","visible","MapContainer","selectedLoc","currentMarker","info","API_KEY","apiKey","onMarkerClick","e","onClose","name","GoogleApiWrapper","process","NavBar","isCountryMap","swapMap","image","require","Navbar","fixed","background","alt","src","className","paddingRight","Brand","href","borderColor","fontSize","Collapse","Text","padding","variant","TweetCard","tweet","Card","text","borderRadius","username","justifyContent","boxShadow","active","window","open","url","StyledGrid","styled","div","TweetList","useContext","TransitionGroup","component","class","wordBreak","paddingTop","getItem","springConfig","presets","wobbly","CSSTransition","timeout","in","classNames","App","useState","setMapState","tweetValue","rel","integrity","crossorigin","Provider","value","Boolean","hostname","match","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.cd75d948.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TweetContext = React.createContext({\r\n  tweets: [],\r\n  setTweets: () => {},\r\n});\r\n\r\nexport default TweetContext;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\nimport \"../../GoogleMap/map.css\";\r\nimport \"./modal.css\";\r\nexport default class LocModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        dark\r\n        // size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop={false}\r\n        dialogClassName=\"dialog\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Switching Maps!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Switching to{\" \"}\r\n          {this.props.locName === 4 ? \"Country view\" : \"State view\"}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport ReactDOM from \"../../node_modules/react-dom\";\r\nimport TweetContext from \"../Tweets/TweetContext\";\r\nimport LocModal from \"../components/Modal/LocationModal\";\r\nconst mapStyles = {\r\n  map: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n};\r\n\r\nexport class CurrentLocation extends React.Component {\r\n  static contextType = TweetContext;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { lat, lng } = this.props.initCenter;\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: lat,\r\n        lng: lng,\r\n      },\r\n      gotCurLoc: false,\r\n      locModalShow: false,\r\n      locName: null,\r\n      zoom: this.props.zoom,\r\n    };\r\n    this.markers = [];\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.zoom != this.props.zoom) {\r\n      let mp = document.getElementById(\"mapback\");\r\n      mp.classList.remove(\"map_canvas\");\r\n      mp.classList.add(\"map_canvas_blur\");\r\n      this.setState({\r\n        locModalShow: true,\r\n        locName: this.props.zoom,\r\n      });\r\n      this.loadMap();\r\n    }\r\n\r\n    if (prevProps.google != this.props.google) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n      var { google } = this.props;\r\n      var mev = {\r\n        stop: null,\r\n        latLng: new google.maps.LatLng(\r\n          this.state.currentLocation.lat,\r\n          this.state.currentLocation.lng\r\n        ),\r\n      };\r\n      google.maps.event.trigger(this.map, \"click\", mev);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.centerAroundCurrentLocation) {\r\n      if (navigator && navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n          const coords = pos.coords;\r\n          this.setState({\r\n            currentLocation: {\r\n              lat: coords.latitude,\r\n              lng: coords.longitude,\r\n              gotCurLoc: true,\r\n            },\r\n          });\r\n        });\r\n      }\r\n    }\r\n    this.loadMap();\r\n  }\r\n\r\n  loadMap() {\r\n    if (this.props && this.props.google) {\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n\r\n      const mapRef = this.refs.map;\r\n\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n\r\n      let { zoom } = this.props;\r\n      let { minZoom, maxZoom } = this.props;\r\n      const { lat, lng } = this.state.currentLocation;\r\n      const center = new maps.LatLng(lat, lng);\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom,\r\n          minZoom: minZoom,\r\n          maxZoom: maxZoom,\r\n          styles: [\r\n            { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\r\n            {\r\n              elementType: \"labels.text.stroke\",\r\n              stylers: [{ color: \"#242f3e\" }],\r\n            },\r\n            {\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#746855\" }],\r\n            },\r\n            {\r\n              featureType: \"administrative.locality\",\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#d59563\" }],\r\n            },\r\n            {\r\n              featureType: \"poi\",\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#d59563\" }],\r\n            },\r\n            {\r\n              featureType: \"poi.park\",\r\n              elementType: \"geometry\",\r\n              stylers: [{ color: \"#263c3f\" }],\r\n            },\r\n            {\r\n              featureType: \"poi.park\",\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#6b9a76\" }],\r\n            },\r\n            {\r\n              featureType: \"road\",\r\n              elementType: \"geometry\",\r\n              stylers: [{ color: \"#38414e\" }],\r\n            },\r\n            {\r\n              featureType: \"road\",\r\n              elementType: \"geometry.stroke\",\r\n              stylers: [{ color: \"#212a37\" }],\r\n            },\r\n            {\r\n              featureType: \"road\",\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#9ca5b3\" }],\r\n            },\r\n            {\r\n              featureType: \"road.highway\",\r\n              elementType: \"geometry\",\r\n              stylers: [{ color: \"#746855\" }],\r\n            },\r\n            {\r\n              featureType: \"road.highway\",\r\n              elementType: \"geometry.stroke\",\r\n              stylers: [{ color: \"#1f2835\" }],\r\n            },\r\n            {\r\n              featureType: \"road.highway\",\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#f3d19c\" }],\r\n            },\r\n            {\r\n              featureType: \"transit\",\r\n              elementType: \"geometry\",\r\n              stylers: [{ color: \"#2f3948\" }],\r\n            },\r\n            {\r\n              featureType: \"transit.station\",\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#d59563\" }],\r\n            },\r\n            {\r\n              featureType: \"water\",\r\n              elementType: \"geometry\",\r\n              stylers: [{ color: \"#17263c\" }],\r\n            },\r\n            {\r\n              featureType: \"water\",\r\n              elementType: \"labels.text.fill\",\r\n              stylers: [{ color: \"#515c6d\" }],\r\n            },\r\n            {\r\n              featureType: \"water\",\r\n              elementType: \"labels.text.stroke\",\r\n              stylers: [{ color: \"#17263c\" }],\r\n            },\r\n          ],\r\n        }\r\n      );\r\n\r\n      this.map = new maps.Map(node, mapConfig);\r\n      const context = this.context;\r\n      // if (this.state.gotCurLoc) {\r\n      //   localStorage.setItem(\"location\", \"Loading Tweets..\");\r\n      //   context.setTweets([]);\r\n      //   var latlng = [lat, lng];\r\n      //   fetch(\"https://world-feed-backend.herokuapp.com/get_tweet\", {\r\n      //     method: \"post\",\r\n      //     headers: { \"Content-type\": \"application/json\" },\r\n\r\n      //     body: JSON.stringify({\r\n      //       type: this.props.zoom === 7 ? \"city\" : \"country\",\r\n      //       lat: latlng[0],\r\n      //       lng: latlng[1],\r\n      //     }),\r\n      //   })\r\n      //     .then((response) => response.json())\r\n      //     .then((data) => {\r\n      //       console.log(data);\r\n      //       context.setTweets([]);\r\n      //       setTimeout(() => context.setTweets(data), 500);\r\n\r\n      //       //context.setTweets(data);\r\n      //     });\r\n      // }\r\n\r\n      // this.reverseAddress(latlng, maps);\r\n      // this.placeMarkerAndPanTo(latlng, this.map, maps);\r\n      this.map.addListener(\"click\", (event) => {\r\n        // alert(\"clicked\" + event.latLng);\r\n        console.log(event);\r\n        localStorage.setItem(\"location\", \"Loading Tweets..\");\r\n        context.setTweets([]);\r\n        var latlng = event.latLng.toString().replace(/\\(|\\)/g, \"\").split(\", \");\r\n        fetch(\"https://world-feed-backend.herokuapp.com/get_tweet\", {\r\n          method: \"post\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n\r\n          body: JSON.stringify({\r\n            type: this.props.zoom === 7 ? \"city\" : \"country\",\r\n            lat: latlng[0],\r\n            lng: latlng[1],\r\n          }),\r\n        })\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              alert(\r\n                \"Hi! This app runs on a basic Twitter api subscription with strict rate limits. We are likely rate limited right now, since you are seeing this :(. Please check back in 15 minutes!\"\r\n              );\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n            context.setTweets([]);\r\n            setTimeout(() => context.setTweets(data), 500);\r\n\r\n            //context.setTweets(data);\r\n          });\r\n\r\n        this.reverseAddress(event.latLng, maps);\r\n        this.placeMarkerAndPanTo(event.latLng, this.map, maps);\r\n      });\r\n    }\r\n  }\r\n\r\n  reverseAddress(latLng, maps) {\r\n    var geocoder = new maps.Geocoder();\r\n    geocoder.geocode({ location: latLng }, (results, status) => {\r\n      // alert(status);\r\n      if (status === \"OK\") {\r\n        // let mp = document.getElementById(\"mapback\");\r\n        // mp.classList.remove(\"map_canvas\");\r\n        // mp.classList.add(\"map_canvas_blur\");\r\n        console.log(\"hi\", results);\r\n        var place = \"\";\r\n        try {\r\n          place =\r\n            this.props.zoom === 7\r\n              ? results[results.length - 2].address_components[0].long_name\r\n              : results[results.length - 2].address_components[1].long_name;\r\n        } catch (err) {\r\n          try {\r\n            place = results[0].address_components[0].long_name;\r\n          } catch (err2) {\r\n            place = \"Invalid Location\";\r\n          }\r\n        }\r\n\r\n        localStorage.setItem(\"location\", place);\r\n        // this.setState({\r\n        //   locModalShow: true,\r\n        //   locName: place,\r\n        // });\r\n        //alert(results[results.length - 2].address_components[0].long_name);\r\n        // console.log(results);\r\n      }\r\n    });\r\n  }\r\n\r\n  getPlaceInfo(map, maps) {\r\n    const service = new maps.places.PlacesService(map);\r\n  }\r\n\r\n  placeMarkerAndPanTo(latLng, map, maps) {\r\n    for (var i = 0; i < this.markers.length; i++) {\r\n      this.markers[i].setMap(null);\r\n    }\r\n    var marker = new maps.Marker({\r\n      position: latLng,\r\n      map: map,\r\n    });\r\n    this.markers.push(marker);\r\n    map.panTo(latLng);\r\n  }\r\n\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n    if (!children) return;\r\n\r\n    return React.Children.map(children, (c) => {\r\n      if (!c) return;\r\n      return React.cloneElement(c, {\r\n        map: this.map,\r\n        google: this.props.google,\r\n        mapCenter: this.state.currentLocation,\r\n      });\r\n    });\r\n  }\r\n\r\n  recenterMap() {\r\n    const map = this.map;\r\n    const current = this.state.currentLocation;\r\n\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n\r\n    if (map) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map.panTo(center);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let locModalClose = () => {\r\n      let mp = document.getElementById(\"mapback\");\r\n      mp.classList.remove(\"map_canvas_blur\");\r\n      mp.classList.add(\"map_canvas\");\r\n\r\n      // let mp = document.getElementById(\"mapback\");\r\n      // mp.classList.remove(\"mapBlur\");\r\n      this.setState({\r\n        locModalShow: false,\r\n      });\r\n    };\r\n    const style = Object.assign({}, mapStyles.map);\r\n    return (\r\n      <div>\r\n        {/* <TweetContext.Consumer></TweetContext.Consumer> */}\r\n\r\n        <div style={style} ref=\"map\">\r\n          Loading map...\r\n        </div>\r\n        {this.renderChildren()}\r\n        <LocModal\r\n          locName={this.state.locName}\r\n          show={this.state.locModalShow}\r\n          onHide={locModalClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 7,\r\n  initCenter: {\r\n    lat: 32.78,\r\n    lng: -96.8,\r\n  },\r\n  minZoom: 5,\r\n  maxZoom: 8,\r\n  centerAroundCurrentLocation: false,\r\n  visible: true,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Map,\r\n  GoogleApiWrapper,\r\n  InfoWindow,\r\n  Marker,\r\n} from \"../../node_modules/google-maps-react\";\r\nimport CurrentLocation from \"./Location\";\r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport class MapContainer extends Component {\r\n  state = {\r\n    selectedLoc: {},\r\n    currentMarker: {},\r\n    info: false,\r\n  };\r\n\r\n  API_KEY = this.props.apiKey;\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedLoc: props,\r\n      currentMarker: marker,\r\n      info: true,\r\n    });\r\n\r\n  onClose = (props) => {\r\n    if (this.state.info) {\r\n      this.setState({\r\n        info: false,\r\n        currentMarker: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CurrentLocation\r\n        centerAroundCurrentLocation\r\n        google={this.props.google}\r\n        zoom={this.props.zoom}\r\n        minZoom={this.props.minZoom}\r\n        maxZoom={this.props.maxZoom}\r\n        // gestureHandling={\"none\"}\r\n      >\r\n        {/* <Marker onClick={this.onMarkerClick} name={\"Dallas\"} /> */}\r\n        <Marker onClick={this.onMarkerClick} name={\"Richardson\"} />\r\n        <InfoWindow\r\n          marker={this.state.currentMarker}\r\n          visible={this.state.info}\r\n          onClose={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{this.state.selectedLoc.name}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </CurrentLocation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: API_KEY,\r\n})(MapContainer);\r\n","import React from \"react\";\r\nimport { Navbar, Button } from \"react-bootstrap\";\r\n\r\nconst NavBar = ({ isCountryMap, swapMap }) => {\r\n  const image = require(\"../Images/cartoon-globe.png\");\r\n  return (\r\n    <Navbar\r\n      fixed=\"top\"\r\n      style={{\r\n        background: \"#222831\",\r\n      }}\r\n      // bg=\"dark\"\r\n      // variant=\"dark\"\r\n    >\r\n      <img\r\n        alt=\"Logo not found\"\r\n        src={image}\r\n        width=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n        style={{\r\n          paddingRight: \"10px\",\r\n        }}\r\n      />\r\n      <Navbar.Brand\r\n        href=\"#home\"\r\n        style={{\r\n          color: \"#ebebeb\",\r\n          borderColor: \"#292929\",\r\n          fontSize: \"25px\",\r\n        }}\r\n      >\r\n        World Feed\r\n      </Navbar.Brand>\r\n      <Navbar.Collapse className=\"justify-content-end\">\r\n        <Navbar.Text\r\n          style={{\r\n            padding: \"15px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          Map Level: <strong>{isCountryMap ? \"Country\" : \"State\"} </strong>\r\n        </Navbar.Text>\r\n        <Button variant=\"secondary\" onClick={swapMap}>\r\n          Switch Map Level\r\n        </Button>\r\n      </Navbar.Collapse>\r\n\r\n      {/* <Button\r\n        classname=\"ml-auto\"\r\n        style={{\r\n          float: \"right\",\r\n        }}\r\n      >\r\n        Hi\r\n      </Button> */}\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nconst TweetCard = (tweet) => {\r\n  return (\r\n    <Card\r\n      text=\"dark\"\r\n      style={{\r\n        borderRadius: \"40px\",\r\n        background: \"#f2a365\",\r\n      }}\r\n    >\r\n      {/* Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n      <Card.Body\r\n      // style={{\r\n      //   borderradius: \"50px !important\",\r\n      // }}\r\n      >\r\n        <Card.Title>{tweet.username} tweeted: </Card.Title>\r\n        <Card.Text>{tweet.tweet}</Card.Text>\r\n        <Button\r\n          style={{\r\n            borderRadius: \"50px\",\r\n            justifyContent: \"center\",\r\n            boxShadow: \"1px 1px 1px 1px #000000\",\r\n          }}\r\n          variant=\"secondary\"\r\n          active\r\n          onClick={() => window.open(tweet.url, \"_blank\")}\r\n        >\r\n          See Tweet\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TweetCard;\r\n","import React, { useContext } from \"react\";\r\nimport TweetContext from \"./TweetContext\";\r\nimport TweetCard from \"./TweetCard\";\r\nimport styled from \"styled-components\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport TextTransition, { presets } from \"react-text-transition\";\r\nimport \"./tweet.css\";\r\nconst StyledGrid = styled.div`\r\n  display: grid;\r\n  // grid-template-columns: repeat(auto-fill, 220px);\r\n  paddingleft: 20px;\r\n  grid-gap: 20px;\r\n  align-self: center;\r\n  padding-right: 10px;\r\n  .transition-enter {\r\n    opacity: 0.01;\r\n    transform: translate(0, -10px);\r\n  }\r\n  .transition-enter-active {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n    transition: all 400ms ease-in;\r\n  }\r\n  .transition-exit {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n  }\r\n  .transition-exit-active {\r\n    opacity: 0.01;\r\n    transform: translate(0, 10px);\r\n    transition: all 400ms ease-in;\r\n  }\r\n`;\r\n\r\nconst TweetList = () => {\r\n  const { tweets, setTweets } = useContext(TweetContext);\r\n  return (\r\n    <TransitionGroup component={StyledGrid}>\r\n      <div class=\"hyphens\" style={{ wordBreak: \"break-word\" }}>\r\n        <h1\r\n          class=\"logo\"\r\n          style={{\r\n            paddingTop: \"35px\",\r\n          }}\r\n        >\r\n          <TextTransition\r\n            text={localStorage.getItem(\"location\")}\r\n            springConfig={presets.wobbly}\r\n          ></TextTransition>\r\n        </h1>\r\n      </div>\r\n      {tweets.map((tweet) => (\r\n        <CSSTransition timeout={400} in={true} classNames=\"transition\">\r\n          {TweetCard(tweet)}\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default TweetList;\r\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MapContainer from \"./GoogleMap/maps.js\";\nimport NavBar from \"./Nav/NavBar.js\";\nimport maps from \"./GoogleMap/maps\";\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Button } from \"react-bootstrap\";\nimport \"./flexbox.css\";\nimport TweetContext from \"./Tweets/TweetContext\";\nimport TweetList from \"./Tweets/TweetList\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nfunction TweetCard() {\n  return (\n    <Card bg=\"dark\" text=\"light\">\n      {/* Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n      <Card.Body>\n        <Card.Title>Card Title</Card.Title>\n        <Card.Text>\n          Some quick example text to build on the card title and make up the\n          bulk of the card's content.\n        </Card.Text>\n        <Button variant=\"primary\">Go somewhere</Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nconst App = () => {\n  const [tweets, setTweets] = useState([\n    // { username: \"sadaf\", tweet: \"hi\", url: \"https://www.twitter.com\" },\n    // { username: \"halim\", tweet: \"hey\", url: \"https://www.twitter.com\" },\n  ]);\n\n  const [isCountryMap, setMapState] = useState(false);\n  const swapMap = () => {\n    setMapState(!isCountryMap);\n  };\n  if (localStorage.getItem(\"location\") === null)\n    localStorage.setItem(\"location\", \"pick a place!\");\n  const tweetValue = { tweets, setTweets };\n  const cards = [0, 1, 2, 3, 4, 5];\n  return (\n    <div class=\"main\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\n        integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\"\n        crossorigin=\"anonymous\"\n      ></link>\n      <script\n        src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"\n        integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\n        crossorigin=\"anonymous\"\n      ></script>\n      <script\n        src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"\n        integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\"\n        crossorigin=\"anonymous\"\n      ></script>\n      <script\n        src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"\n        integrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\"\n        crossorigin=\"anonymous\"\n      ></script>\n\n      <TweetContext.Provider value={tweetValue}>\n        <NavBar isCountryMap={isCountryMap} swapMap={swapMap}></NavBar>\n        <div\n          style={{\n            paddingTop: \"60px\",\n          }}\n          // style={{\n          //   dispaly: \"flex\",\n          //   flexDirection: \"row\",\n          // }}\n          class=\"flexbox-container\"\n        >\n          <div class=\"left_container\">\n            {/* <div>{cards.map(TweetCard)}</div> */}\n            <TweetList />\n          </div>\n          <div id=\"mapback\" class=\"map_canvas\">\n            <MapContainer\n              zoom={isCountryMap ? 4 : 7}\n              minZoom={isCountryMap ? 3 : 5}\n              maxZoom={isCountryMap ? 5 : 8}\n            />\n          </div>\n        </div>\n      </TweetContext.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/cartoon-globe.e4b1dac8.png\";"],"sourceRoot":""}